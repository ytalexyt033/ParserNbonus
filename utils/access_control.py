from config.config import Config
from aiogram.types import Message
from functools import wraps

def chat_access_required(func):
    @wraps(func)
    async def wrapper(message: Message, *args, **kwargs):
        if message.chat.id in Config.ALLOWED_CHAT_IDS:
            return await func(message, *args, **kwargs)
        await message.reply("üö´ –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω: —ç—Ç–æ—Ç —á–∞—Ç –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω")
    return wrapper

def private_access_required(func):
    @wraps(func)
    async def wrapper(message: Message, *args, **kwargs):
        if message.from_user.id in Config.ALLOWED_USER_IDS:
            return await func(message, *args, **kwargs)
        await message.reply("üîí –î–æ—Å—Ç—É–ø —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
    return wrapper

def admin_required(func):
    @wraps(func)
    async def wrapper(message: Message, *args, **kwargs):
        if message.from_user.id in Config.ADMIN_USER_IDS:
            return await func(message, *args, **kwargs)
        await message.reply("‚õî –¢—Ä–µ–±—É—é—Ç—Å—è –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
    return wrapper